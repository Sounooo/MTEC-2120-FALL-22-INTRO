//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/mapAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MapAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MapAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""mapAction"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""da4a8934-04fd-4644-8aef-0bd7aeb74fa3"",
            ""actions"": [
                {
                    ""name"": ""Effect 1"",
                    ""type"": ""Button"",
                    ""id"": ""fcc6c390-1009-42f7-be11-52ace67565b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Effect 2"",
                    ""type"": ""Button"",
                    ""id"": ""2b8fb5eb-a574-4caa-bd95-188b1520e4aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Effect 3"",
                    ""type"": ""Button"",
                    ""id"": ""6835adab-67e7-4dcf-abb4-9a6c96a899b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Effect 4"",
                    ""type"": ""Button"",
                    ""id"": ""a743f783-682f-4655-9544-8df3fca07243"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Effect 5"",
                    ""type"": ""Button"",
                    ""id"": ""c0c27ae9-f0c8-4b02-a068-63b164b0af1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2b55d3da-970b-4d3f-ac40-b4a18cc44107"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Effect 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""249bf71a-d7e7-45a0-b04e-b491db45fd7d"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Effect 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e16abb73-f473-4362-a24a-1deb1363effd"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Effect 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa96f979-2f98-482a-9674-828ee42c46a9"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Effect 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dba58728-e860-4d93-951e-b66bd4047e9a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Effect 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Effect1 = m_Player.FindAction("Effect 1", throwIfNotFound: true);
        m_Player_Effect2 = m_Player.FindAction("Effect 2", throwIfNotFound: true);
        m_Player_Effect3 = m_Player.FindAction("Effect 3", throwIfNotFound: true);
        m_Player_Effect4 = m_Player.FindAction("Effect 4", throwIfNotFound: true);
        m_Player_Effect5 = m_Player.FindAction("Effect 5", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Effect1;
    private readonly InputAction m_Player_Effect2;
    private readonly InputAction m_Player_Effect3;
    private readonly InputAction m_Player_Effect4;
    private readonly InputAction m_Player_Effect5;
    public struct PlayerActions
    {
        private @MapAction m_Wrapper;
        public PlayerActions(@MapAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Effect1 => m_Wrapper.m_Player_Effect1;
        public InputAction @Effect2 => m_Wrapper.m_Player_Effect2;
        public InputAction @Effect3 => m_Wrapper.m_Player_Effect3;
        public InputAction @Effect4 => m_Wrapper.m_Player_Effect4;
        public InputAction @Effect5 => m_Wrapper.m_Player_Effect5;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Effect1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect1;
                @Effect1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect1;
                @Effect1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect1;
                @Effect2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect2;
                @Effect2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect2;
                @Effect2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect2;
                @Effect3.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect3;
                @Effect3.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect3;
                @Effect3.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect3;
                @Effect4.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect4;
                @Effect4.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect4;
                @Effect4.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect4;
                @Effect5.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect5;
                @Effect5.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect5;
                @Effect5.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEffect5;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Effect1.started += instance.OnEffect1;
                @Effect1.performed += instance.OnEffect1;
                @Effect1.canceled += instance.OnEffect1;
                @Effect2.started += instance.OnEffect2;
                @Effect2.performed += instance.OnEffect2;
                @Effect2.canceled += instance.OnEffect2;
                @Effect3.started += instance.OnEffect3;
                @Effect3.performed += instance.OnEffect3;
                @Effect3.canceled += instance.OnEffect3;
                @Effect4.started += instance.OnEffect4;
                @Effect4.performed += instance.OnEffect4;
                @Effect4.canceled += instance.OnEffect4;
                @Effect5.started += instance.OnEffect5;
                @Effect5.performed += instance.OnEffect5;
                @Effect5.canceled += instance.OnEffect5;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnEffect1(InputAction.CallbackContext context);
        void OnEffect2(InputAction.CallbackContext context);
        void OnEffect3(InputAction.CallbackContext context);
        void OnEffect4(InputAction.CallbackContext context);
        void OnEffect5(InputAction.CallbackContext context);
    }
}
